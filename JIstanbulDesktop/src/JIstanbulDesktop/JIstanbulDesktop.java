/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JIstanbulDesktop.java
 *
 * Created on May 1, 2010, 3:35:08 PM
 */

package JIstanbulDesktop;

import iett.Line;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utils.NoSuchLineException;
import utils.TimeList;

/**
 *
 * @author emre
 */
public class JIstanbulDesktop extends javax.swing.JFrame {

    private Connector conn;
    DefaultTableModel tableModel;

    /** Creates new form JIstanbulDesktop */
    public JIstanbulDesktop() {
        initComponents();
        initLibrary();
    }

    private void initLibrary(){
        conn = new Connector();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lineCode = new javax.swing.JTextField();
        fetchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        timetable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JIstanbul");

        jLabel1.setText("Hat Kodu:");

        lineCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineCodeActionPerformed(evt);
            }
        });

        fetchButton.setText("Saat Bul");
        fetchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fetchButtonActionPerformed(evt);
            }
        });

        timetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "A-H.İçi", "B-H.İçi", "A-Cumartesi", "B-Cumartesi", "A-Pazar", "B-Pazar"
            }
        ));
        jScrollPane1.setViewportView(timetable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lineCode, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fetchButton)
                .addContainerGap(353, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lineCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fetchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lineCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lineCodeActionPerformed

    private void fetchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fetchButtonActionPerformed
        try {
            Line line;
            System.out.println("Downloading");
            try {
                line = conn.downloadLine(lineCode.getText());
            }
            catch (NoSuchLineException e){
                JOptionPane.showMessageDialog(null, e.getError());
                return;
            }
            catch (Exception e){
                System.err.println(e);
                return;
            }
            
            System.out.println("Downloaded line");
            TimeList[] times = line.getTimetable();
            System.out.println("Got timetable");
            
            String from = line.getFrom();
            String to = line.getTo();


            tableModel = new DefaultTableModel();
            tableModel.addColumn(from + " - H.içi", times[0].toArray());
            tableModel.addColumn(to + " - H.içi", times[1].toArray());
            tableModel.addColumn(from + " - Cumartesi", times[2].toArray());
            tableModel.addColumn(to + " - Cumartesi", times[3].toArray());
            tableModel.addColumn(from + " - Pazar", times[4].toArray());
            tableModel.addColumn(to + " - Pazar", times[5].toArray());
            System.out.println("Added coolumns");
            //ArrayList<Time[]> rows = line.getRowBasedTimeTable();
            //System.out.println("Inserting"+ rows.get(0));
            //tableModel.insertRow(tableModel.getRowCount(), rows.get(0));

            timetable.setModel(tableModel);
        }
        catch (Exception e){
            System.err.println(e);
        }
    }//GEN-LAST:event_fetchButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JIstanbulDesktop().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton fetchButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lineCode;
    private javax.swing.JTable timetable;
    // End of variables declaration//GEN-END:variables

}
